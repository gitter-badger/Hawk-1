
namespace std {

	class void;
	class bool;
	class byte;
	class char;
	class int;
	class float;
	class double;
	class string;

	class bool {
		bool operator && (bool);
		bool operator || (bool);
		bool operator ! ();
	}

	class byte {
		bool operator > (byte); // ~~ body: ltb 2 1 0 ~~
		bool operator >= (byte); // ~~ body: lteb 2 1 0 ~~
		bool operator < (byte); // ~~ body: ltb 1 2 0 ~~
		bool operator <= (byte); // ~~ body: lteb 1 2 0 ~~

		bool operator > (int); // ~~ body: btoi 1 1; lti 2 1 0 ~~
		bool operator >= (int); // ~~ body: btoi 1 1; ltei 2 1 0 ~~
		bool operator < (int); // ~~ body: btoi 1 1; lti 1 2 0 ~~
		bool operator <= (int); // ~~ body: btoi 1 1; ltei 1 2 0 ~~

		bool operator > (double); // ~~ body: btod 1 1; ltd 2 1 0 ~~
		bool operator >= (double); // ~~ body: btod 1 1; lted 2 1 0 ~~
		bool operator < (double); // ~~ body: btod 1 1; ltd 1 2 0 ~~
		bool operator <= (double); // ~~ body: btod 1 1; lted 1 2 0 ~~

		int operator + (int);
		int operator - (int);
		int operator * (int);
		int operator / (int);
		int operator % (int);
		int operator ** (int);

		byte operator + (byte);
		byte operator - (byte);
		byte operator * (byte);
		byte operator / (byte);
		byte operator % (byte);
		byte operator ** (byte);

		double operator + (double);
		double operator - (double);
		double operator * (double);
		double operator / (double);
		double operator % (double);
		double operator ** (double);

		byte operator & (byte);
		byte operator | (byte);
		byte operator ^ (byte);
		byte operator << (byte);
		byte operator >> (byte);

		int operator & (int);
		int operator | (int);
		int operator ^ (int);
		int operator << (int);
		int operator >> (int);

		int operator ~ ();
	}

	class int {
		int random();

		// the following should work when I add in inline bytecode parsing
		bool operator > (int); // ~~ body: lti 2 1 0 ~~
		bool operator >= (int); // ~~ body: ltei 2 1 0 ~~
		bool operator < (int); // ~~ body: lti 1 2 0 ~~
		bool operator <= (int); // ~~ body: ltei 1 2 0 ~~

		bool operator > (double); // ~~ body: itod 1 1; ltd 2 1 0 ~~
		bool operator >= (double); // ~~ body: itod 1 1; lted 2 1 0 ~~
		bool operator < (double); // ~~ body: itod 1 1; ltd 1 2 0 ~~
		bool operator <= (double); // ~~ body: itod 1 1; lted 1 2 0 ~~

		int operator + (int);
		int operator - (int);
		int operator * (int);
		int operator / (int);
		int operator % (int);
		int operator ** (int);

		double operator + (double);
		double operator - (double);
		double operator * (double);
		double operator / (double);
		double operator % (double);
		double operator ** (double);

		int operator & (int);
		int operator | (int);
		int operator ^ (int);
		int operator << (int);
		int operator >> (int);

		int operator ~ ();
	}

	class float {
		float random();

		int floor();
		int ceil();
		float round(int = 0);

		bool operator > (float); // ~~ body: ltf 2 1 0 ~~
		bool operator >= (float); // ~~ body: ltef 2 1 0 ~~
		bool operator < (float); // ~~ body: ltf 1 2 0 ~~
		bool operator <= (float); // ~~ body: ltef 1 2 0 ~~

		bool operator > (int); // ~~ body: ftoi 1 1; lti 2 1 0 ~~
		bool operator >= (int); // ~~ body: ftoi 1 1; ltei 2 1 0 ~~
		bool operator < (int); // ~~ body: ftoi 1 1; lti 1 2 0 ~~
		bool operator <= (int); // ~~ body: ftoi 1 1; ltei 1 2 0 ~~
		
		bool operator > (double); // ~~ body: ftod 1 1; ltd 2 1 0 ~~
		bool operator >= (double); // ~~ body: ftod 1 1; lted 2 1 0 ~~
		bool operator < (double); // ~~ body: ftod 1 1; ltd 1 2 0 ~~
		bool operator <= (double); // ~~ body: ftod 1 1; lted 1 2 0 ~~

		float operator + (int);
		float operator - (int);
		float operator * (int);
		float operator / (int);
		float operator % (int);
		float operator ** (int);

		float operator + (float);
		float operator - (float);
		float operator * (float);
		float operator / (float);
		float operator % (float);
		float operator ** (float);

		double operator + (double);
		double operator - (double);
		double operator * (double);
		double operator / (double);
		double operator % (double);
		double operator ** (double);
	}

	class double {
		double random();

		int floor();
		int ceil();
		double round(int = 0);

		bool operator > (int); // ~~ body: dtoi 1 1; lti 2 1 0 ~~
		bool operator >= (int); // ~~ body: dtoi 1 1; ltei 2 1 0 ~~
		bool operator < (int); // ~~ body: dtoi 1 1; lti 1 2 0 ~~
		bool operator <= (int); // ~~ body: dtoi 1 1; ltei 1 2 0 ~~
		
		bool operator > (double); // ~~ body: ltd 2 1 0 ~~
		bool operator >= (double); // ~~ body: lted 2 1 0 ~~
		bool operator < (double); // ~~ body: ltd 1 2 0 ~~
		bool operator <= (double); // ~~ body: lted 1 2 0 ~~

		float operator + (int);
		float operator - (int);
		float operator * (int);
		float operator / (int);
		float operator % (int);
		float operator ** (int);

		double operator + (double);
		double operator - (double);
		double operator * (double);
		double operator / (double);
		double operator % (double);
		double operator ** (double);
	}

	class string {
		string substr(int);
		string substr(int, int);

		bool contains(string, int = 0);
		int find(string, int = 0);
		string match(string, int = 0);

		int replace(string, string);
		int remove(string);

		char operator[](int);
		void operator[](int, char);

		string operator + (string);
		string operator + (int);
		string operator + (double);
		string operator + (char);
		string operator + (bool);

		string operator - (string);

		string operator * (int);
	}

}
